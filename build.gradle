plugins {
	id 'org.springframework.boot' version '2.2.2.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
    id 'com.moowork.node' version '1.3.1'
    id 'application'
}

group = 'dev.jlatkiewicz'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '13'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

repositories {
	mavenCentral()
}

node {
    version = '13.3.0'
    npmVersion = '6.13.3'
    download = true
    nodeModulesDir = file('src/main/webapp/gallery/')
}

task testFrontend(type: NpmTask) {
    dependsOn npmInstall
    args = ['test', '--', '--', '--watchAll=false']
}

task buildFrontend(type: NpmTask) {
    dependsOn npmInstall
    outputs.upToDateWhen {
        file('build/resources/main/resources/static').exists()
    }
    args = ['run', 'build']
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {
	useJUnitPlatform()
}

mainClassName = 'dev.jlatkiewicz.gallery.GalleryApplication'
jar.dependsOn buildFrontend

tasks.withType(GroovyCompile) {
    groovyOptions.optimizationOptions.indy = true
    options.encoding = 'UTF-8'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
